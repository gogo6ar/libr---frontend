{"version":3,"sources":["webpack:///src/app/users/add-edit.component.ts","webpack:///src/app/users/add-edit.component.html","webpack:///src/app/users/layout.component.ts","webpack:///src/app/users/layout.component.html","webpack:///src/app/users/list.component.ts","webpack:///src/app/users/list.component.html","webpack:///src/app/users/users-routing.module.ts","webpack:///src/app/users/users.module.ts"],"names":["AddEditComponent","formBuilder","route","router","accountService","alertService","loading","submitted","id","snapshot","params","isAddMode","passwordValidators","minLength","push","required","form","group","firstName","lastName","email","age","phone","password","role","getById","pipe","subscribe","x","f","setValue","clear","invalid","createUser","updateUser","register","value","data","success","keepAfterRouteChange","navigate","relativeTo","error","errorMessage","update","controls","onSubmit","templateUrl","LayoutComponent","ListComponent","activatedRoute","dtOptions","users","dtTrigger","pagingType","pageLength","getAll","next","userRole","getRole","unsubscribe","user","find","filter","type","sendEmail","routes","path","component","children","UsersRoutingModule","forChild","imports","exports","UsersModule","declarations"],"mappings":"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","file":"users-users-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NgForm } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AccountService, AlertService } from '@app/_services';\r\n\r\n@Component({ templateUrl: 'add-edit.component.html' })\r\nexport class AddEditComponent implements OnInit {\r\n    form: FormGroup;\r\n    id: string;\r\n    isAddMode: boolean;\r\n    loading = false;\r\n    submitted = false;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.id = this.route.snapshot.params['id'];\r\n        this.isAddMode = !this.id;\r\n\r\n        // password not required in edit mode\r\n        const passwordValidators = [Validators.minLength(6)];\r\n        if (this.isAddMode) {\r\n            passwordValidators.push(Validators.required);\r\n        }\r\n\r\n        this.form = this.formBuilder.group({\r\n            firstName: ['', Validators.required],\r\n            lastName: ['', Validators.required],\r\n            email: ['', Validators.email],\r\n            age: ['', Validators.required],\r\n            phone: ['', Validators.required],\r\n            password: ['', passwordValidators],\r\n            role: ['', Validators.required]\r\n        });\r\n\r\n        if (!this.isAddMode) {\r\n            this.accountService.getById(this.id)\r\n                .pipe(first())\r\n                .subscribe(x => {\r\n                    this.f.firstName.setValue(x.firstName);\r\n                    this.f.lastName.setValue(x.lastName);\r\n                    this.f.age.setValue(x.age);\r\n                    this.f.phone.setValue(x.phone);\r\n                    this.f.email.setValue(x.email);\r\n                    this.f.password.setValue(x.password);\r\n                    this.f.role.setValue(x.role);\r\n                });\r\n        }\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.form.controls; }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n        // reset alerts on submit\r\n        this.alertService.clear();\r\n        // stop here if form is invalid\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        if (this.isAddMode) {\r\n            this.createUser();\r\n        } else {\r\n            this.updateUser();\r\n        }\r\n    }\r\n\r\n    private createUser() {\r\n        this.accountService.register(this.form.value)\r\n            .pipe(first())\r\n            .subscribe(\r\n                data => {\r\n                    this.alertService.success('User added successfully', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['.', { relativeTo: this.route }]);\r\n                },\r\n                error => {\r\n                    this.alertService.error(error.error.errorMessage);\r\n                    this.loading = false;\r\n                });\r\n    }\r\n\r\n    private updateUser() {\r\n        this.accountService.update(this.id, this.form.value)\r\n            .pipe(first())\r\n            .subscribe(\r\n                data => {\r\n                    this.alertService.success('Update successful', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['..', { relativeTo: this.route }]);\r\n                },\r\n                error => {\r\n                    this.alertService.error(error.error.errorMessage);\r\n                    this.loading = false;\r\n                });\r\n    }\r\n}\r\n","<h1 *ngIf=\"isAddMode\">Add User</h1>\r\n<h1 *ngIf=\"!isAddMode\">Edit User</h1>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n  <div class=\"form-row\">\r\n    <div class=\"form-group col\">\r\n      <label for=\"firstName\">First Name</label>\r\n      <input type=\"text\" required formControlName=\"firstName\" class=\"form-control\"\r\n        [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\r\n      <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\r\n        <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group col\">\r\n      <label for=\"lastName\">Last Name</label>\r\n      <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"\r\n        [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\r\n      <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\r\n        <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-row\">\r\n    <div class=\"form-group col\">\r\n      <label for=\"age\">Age</label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"\r\n        [ngClass]=\"{ 'is-invalid': submitted && f.age.errors }\" />\r\n      <div *ngIf=\"submitted && f.age.errors\" class=\"invalid-feedback\">\r\n        <div *ngIf=\"f.age.errors.required\">Age is required</div>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group col\">\r\n      <label for=\"phone\">Phone</label>\r\n      <input type=\"text\" formControlName=\"phone\" class=\"form-control\"\r\n        [ngClass]=\"{ 'is-invalid': submitted && f.phone.errors }\" />\r\n      <div *ngIf=\"submitted && f.phone.errors\" class=\"invalid-feedback\">\r\n        <div *ngIf=\"f.lastName.errors.required\">Phone is required</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-row\">\r\n    <div class=\"form-group col\">\r\n      <label for=\"email\">Email</label>\r\n      <input type=\"text\" formControlName=\"email\" class=\"form-control\"\r\n        [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\r\n      <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n        <div *ngIf=\"f.email.errors.required\">email is required</div>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"!isAddMode\" class=\"form-group col\">\r\n      <label for=\"role\">\r\n        Role\r\n      </label>\r\n      <select type=\"text\" name=\"role\" formControlName=\"role\" class=\"form-control\"\r\n        [ngClass]=\"{ 'is-invalid': submitted && f.role.errors }\">\r\n        <option label=\"User\" value=\"USER\">User</option>\r\n        <option label=\"Admin\" value=\"ADMIN\" selected>Admin</option>\r\n      </select>\r\n    </div>\r\n\r\n\r\n    <div *ngIf=\"isAddMode\" class=\"form-group col\">\r\n      <label for=\"password\">\r\n        Password\r\n        <em *ngIf=\"!isAddMode\">(Leave blank to keep the same password)</em>\r\n      </label>\r\n      <input type=\"password\" formControlName=\"password\" class=\"form-control\"\r\n        [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n      <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n        <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n        <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n      <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n      Save\r\n    </button>\r\n    <a routerLink=\"/users\" class=\"btn btn-link\">Cancel</a>\r\n  </div>\r\n</form>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({ templateUrl: 'layout.component.html' })\r\nexport class LayoutComponent { }","<div class=\"p-4\">\r\n    <div class=\"container\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AccountService } from '@app/_services';\r\nimport { Subject } from 'rxjs';\r\nimport { User } from '@app/_models';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n\r\n@Component({ templateUrl: 'list.component.html' })\r\nexport class ListComponent implements OnDestroy, OnInit {\r\n  dtOptions: DataTables.Settings = {};\r\n  users: User[] = [];\r\n  userRole: string;\r\n\r\n  // We use this trigger because fetching the list of persons can be quite long,\r\n  // thus we ensure the data is fetched before rendering\r\n  dtTrigger: Subject<any> = new Subject<any>();\r\n\r\n  constructor(private accountService: AccountService, private router: Router, private activatedRoute: ActivatedRoute) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dtOptions = {\r\n      pagingType: 'full_numbers',\r\n      pageLength: 20\r\n    };\r\n    this.accountService.getAll()\r\n      .pipe(first())\r\n      .subscribe(users => {\r\n        this.users = users;\r\n        this.dtTrigger.next();\r\n      });\r\n    this.userRole = this.accountService.getRole();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.dtTrigger.unsubscribe();\r\n  }\r\n\r\n  deleteUser(id: string) {\r\n    const user = this.users.find(x => x.id === id);\r\n    // user.isDeleting = true;\r\n    this.accountService.delete(id)\r\n      .pipe(first())\r\n      .subscribe(() => {\r\n        this.users = this.users.filter(x => x.id !== id);\r\n      });\r\n  }\r\n\r\n  navigateToProfile(id: string) {\r\n    this.router.navigate([\"/profile/\" + id], { relativeTo: this.activatedRoute });\r\n  }\r\n\r\n  public sendEmail(id: string, type: string) {\r\n\r\n    this.accountService.sendEmail(id, type);\r\n  }\r\n}\r\n","<h1>Users</h1>\r\n<a routerLink=\"add\" class=\"btn btn-sm btn-success mb-2\">Add User</a>\r\n<table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped\">\r\n  <thead>\r\n    <tr>\r\n      <th style=\"width: 4%\">ID</th>\r\n      <th style=\"width: 10%\">First name</th>\r\n      <th style=\"width: 10%\">Last name</th>\r\n      <th style=\"width: 16%\">Email</th>\r\n      <th style=\"width: 16%\">Telephone</th>\r\n      <th style=\"width: 16%\">Age</th>\r\n      <th style=\"width: 6%\">Role</th>\r\n      <th style=\"width: 22%\">\r\n      </th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let user of users\">\r\n      <td>{{user.id}}</td>\r\n      <td>{{user.firstName}}</td>\r\n      <td>{{user.lastName}}</td>\r\n      <td>\r\n        <a (click)=\"navigateToProfile(user.id)\">\r\n          {{user.email}}\r\n        </a>\r\n      </td>\r\n      <td>{{user.phone}}</td>\r\n      <td>{{user.age}}</td>\r\n      <td>{{user.role}}</td>\r\n      <td>\r\n\r\n        <div class=\"dropdown\" style=\"width: 100%;\">\r\n          <a routerLink=\"edit/{{user.id}}\" class=\"btn btn-sm btn-primary mr-1\">Edit</a>\r\n          <button (click)=\"deleteUser(user.id)\" class=\"btn btn-sm btn-danger btn-delete-user\">\r\n            <span *ngIf=\"user.isDeleting\" class=\"spinner-border spinner-border-sm\"></span>\r\n            <span *ngIf=\"!user.isDeleting\">Delete</span>\r\n          </button>\r\n\r\n          <button style=\"width: 40%; font-size: .875rem; padding: 0.25rem 0.5rem\" class=\"btn btn-secondary dropdown-toggle ml-1\" type=\"button\" id=\"dropdownMenuButton\"\r\n            data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n            Email\r\n          </button>\r\n          <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n            <button (click)=\"sendEmail(user.id, 'BOOK_DEBT')\" class=\"dropdown-item\">BOOK_DEBT</button>\r\n            <button (click)=\"sendEmail(user.id, 'BOOK_ORDERED')\" class=\"dropdown-item\">BOOK_ORDERED</button>\r\n            <button (click)=\"sendEmail(user.id, 'BOOK_IN_LIBRARY')\" class=\"dropdown-item\">BOOK_IN_LIBRARY</button>\r\n          </div>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n<script src=\"https://code.jquery.com/jquery-3.3.1.js\"></script>\r\n<script src=\"https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js\"></script>\r\n\r\n<script>\r\n  $(document).ready( function () {\r\n    $('#myTable').DataTable();\r\n  } );\r\n</script>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LayoutComponent } from './layout.component';\r\nimport { ListComponent } from './list.component';\r\nimport { AddEditComponent } from './add-edit.component';\r\nimport {ProfileComponent} from '@app/profile/profile.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: LayoutComponent,\r\n        children: [\r\n            { path: '', component: ListComponent },\r\n            { path: 'add', component: AddEditComponent },\r\n            { path: 'edit/:id', component: AddEditComponent },\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class UsersRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { UsersRoutingModule } from './users-routing.module';\r\nimport { LayoutComponent } from './layout.component';\r\nimport { ListComponent } from './list.component';\r\nimport { AddEditComponent } from './add-edit.component';\r\nimport {DataTablesModule} from 'angular-datatables';\r\nimport { NgForm } from '@angular/forms';\r\nimport {EditProfileComponent} from '@app/profile/edit-profile.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        UsersRoutingModule,\r\n        DataTablesModule\r\n    ],\r\n    declarations: [\r\n        LayoutComponent,\r\n        ListComponent,\r\n        AddEditComponent,\r\n    ]\r\n})\r\nexport class UsersModule { }\r\n"]}