{"version":3,"sources":["./src/app/users/add-edit.component.ts","./src/app/users/add-edit.component.html","./src/app/users/layout.component.ts","./src/app/users/layout.component.html","./src/app/users/list.component.ts","./src/app/users/list.component.html","./src/app/users/users-routing.module.ts","./src/app/users/users.module.ts"],"names":[],"mappings":"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","file":"users-users-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NgForm } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AccountService, AlertService } from '@app/_services';\r\n\r\n@Component({ templateUrl: 'add-edit.component.html' })\r\nexport class AddEditComponent implements OnInit {\r\n    form: FormGroup;\r\n    id: string;\r\n    isAddMode: boolean;\r\n    loading = false;\r\n    submitted = false;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.id = this.route.snapshot.params['id'];\r\n        this.isAddMode = !this.id;\r\n\r\n        // password not required in edit mode\r\n        const passwordValidators = [Validators.minLength(6)];\r\n        if (this.isAddMode) {\r\n            passwordValidators.push(Validators.required);\r\n        }\r\n\r\n        this.form = this.formBuilder.group({\r\n            firstName: ['', Validators.required],\r\n            lastName: ['', Validators.required],\r\n            email: ['', Validators.email],\r\n            age: ['', Validators.required],\r\n            phone: ['', Validators.required],\r\n            password: ['', passwordValidators],\r\n            role: ['', Validators.required]\r\n        });\r\n\r\n        if (!this.isAddMode) {\r\n            this.accountService.getById(this.id)\r\n                .pipe(first())\r\n                .subscribe(x => {\r\n                    this.f.firstName.setValue(x.firstName);\r\n                    this.f.lastName.setValue(x.lastName);\r\n                    this.f.age.setValue(x.age);\r\n                    this.f.phone.setValue(x.phone);\r\n                    this.f.email.setValue(x.email);\r\n                    this.f.password.setValue(x.password);\r\n                    this.f.role.setValue(x.role);\r\n                });\r\n        }\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.form.controls; }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n        // reset alerts on submit\r\n        this.alertService.clear();\r\n        // stop here if form is invalid\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        if (this.isAddMode) {\r\n            this.createUser();\r\n        } else {\r\n            this.updateUser();\r\n        }\r\n    }\r\n\r\n    private createUser() {\r\n        this.accountService.register(this.form.value)\r\n            .pipe(first())\r\n            .subscribe(\r\n                data => {\r\n                    this.alertService.success('User added successfully', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['.', { relativeTo: this.route }]);\r\n                },\r\n                error => {\r\n                    this.alertService.error(error.error.errorMessage);\r\n                    this.loading = false;\r\n                });\r\n    }\r\n\r\n    private updateUser() {\r\n        this.accountService.update(this.id, this.form.value)\r\n            .pipe(first())\r\n            .subscribe(\r\n                data => {\r\n                    this.alertService.success('Update successful', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['..', { relativeTo: this.route }]);\r\n                },\r\n                error => {\r\n                    this.alertService.error(error.error.errorMessage);\r\n                    this.loading = false;\r\n                });\r\n    }\r\n}\r\n","<h1 *ngIf=\"isAddMode\">Add User</h1>\r\n<h1 *ngIf=\"!isAddMode\">Edit User</h1>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n  <div class=\"form-row\">\r\n    <div class=\"form-group col\">\r\n      <label for=\"firstName\">First Name</label>\r\n      <input type=\"text\" required formControlName=\"firstName\" class=\"form-control\"\r\n        [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\r\n      <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\r\n        <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group col\">\r\n      <label for=\"lastName\">Last Name</label>\r\n      <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"\r\n        [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\r\n      <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\r\n        <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-row\">\r\n    <div class=\"form-group col\">\r\n      <label for=\"age\">Age</label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"\r\n        [ngClass]=\"{ 'is-invalid': submitted && f.age.errors }\" />\r\n      <div *ngIf=\"submitted && f.age.errors\" class=\"invalid-feedback\">\r\n        <div *ngIf=\"f.age.errors.required\">Age is required</div>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group col\">\r\n      <label for=\"phone\">Phone</label>\r\n      <input type=\"text\" formControlName=\"phone\" class=\"form-control\"\r\n        [ngClass]=\"{ 'is-invalid': submitted && f.phone.errors }\" />\r\n      <div *ngIf=\"submitted && f.phone.errors\" class=\"invalid-feedback\">\r\n        <div *ngIf=\"f.lastName.errors.required\">Phone is required</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-row\">\r\n    <div class=\"form-group col\">\r\n      <label for=\"email\">Email</label>\r\n      <input type=\"text\" formControlName=\"email\" class=\"form-control\"\r\n        [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\r\n      <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n        <div *ngIf=\"f.email.errors.required\">email is required</div>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"!isAddMode\" class=\"form-group col\">\r\n      <label for=\"role\">\r\n        Role\r\n      </label>\r\n      <select type=\"text\" name=\"role\" formControlName=\"role\" class=\"form-control\"\r\n        [ngClass]=\"{ 'is-invalid': submitted && f.role.errors }\">\r\n        <option label=\"User\" value=\"USER\">User</option>\r\n        <option label=\"Admin\" value=\"ADMIN\" selected>Admin</option>\r\n      </select>\r\n    </div>\r\n\r\n\r\n    <div *ngIf=\"isAddMode\" class=\"form-group col\">\r\n      <label for=\"password\">\r\n        Password\r\n        <em *ngIf=\"!isAddMode\">(Leave blank to keep the same password)</em>\r\n      </label>\r\n      <input type=\"password\" formControlName=\"password\" class=\"form-control\"\r\n        [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n      <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n        <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n        <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n      <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n      Save\r\n    </button>\r\n    <a routerLink=\"/users\" class=\"btn btn-link\">Cancel</a>\r\n  </div>\r\n</form>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({ templateUrl: 'layout.component.html' })\r\nexport class LayoutComponent { }","<div class=\"p-4\">\r\n    <div class=\"container\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AccountService } from '@app/_services';\r\nimport { Subject } from 'rxjs';\r\nimport { User } from '@app/_models';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n\r\n@Component({ templateUrl: 'list.component.html' })\r\nexport class ListComponent implements OnDestroy, OnInit {\r\n  dtOptions: DataTables.Settings = {};\r\n  users: User[] = [];\r\n  userRole: string;\r\n\r\n  // We use this trigger because fetching the list of persons can be quite long,\r\n  // thus we ensure the data is fetched before rendering\r\n  dtTrigger: Subject<any> = new Subject<any>();\r\n\r\n  constructor(private accountService: AccountService, private router: Router, private activatedRoute: ActivatedRoute) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dtOptions = {\r\n      pagingType: 'full_numbers',\r\n      pageLength: 20\r\n    };\r\n    this.accountService.getAll()\r\n      .pipe(first())\r\n      .subscribe(users => {\r\n        this.users = users;\r\n        this.dtTrigger.next();\r\n      });\r\n    this.userRole = this.accountService.getRole();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.dtTrigger.unsubscribe();\r\n  }\r\n\r\n  deleteUser(id: string) {\r\n    const user = this.users.find(x => x.id === id);\r\n    // user.isDeleting = true;\r\n    this.accountService.delete(id)\r\n      .pipe(first())\r\n      .subscribe(() => {\r\n        this.users = this.users.filter(x => x.id !== id);\r\n      });\r\n  }\r\n\r\n  navigateToProfile(id: string) {\r\n    this.router.navigate([\"/profile/\" + id], { relativeTo: this.activatedRoute });\r\n  }\r\n\r\n  public sendEmail(id: string, type: string) {\r\n\r\n    this.accountService.sendEmail(id, type);\r\n  }\r\n}\r\n","<h1>Users</h1>\r\n<a routerLink=\"add\" class=\"btn btn-sm btn-success mb-2\">Add User</a>\r\n<table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped\">\r\n  <thead>\r\n    <tr>\r\n      <th style=\"width: 4%\">ID</th>\r\n      <th style=\"width: 10%\">First name</th>\r\n      <th style=\"width: 10%\">Last name</th>\r\n      <th style=\"width: 16%\">Email</th>\r\n      <th style=\"width: 16%\">Telephone</th>\r\n      <th style=\"width: 16%\">Age</th>\r\n      <th style=\"width: 6%\">Role</th>\r\n      <th style=\"width: 22%\">\r\n      </th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let user of users\">\r\n      <td>{{user.id}}</td>\r\n      <td>{{user.firstName}}</td>\r\n      <td>{{user.lastName}}</td>\r\n      <td>\r\n        <a (click)=\"navigateToProfile(user.id)\">\r\n          {{user.email}}\r\n        </a>\r\n      </td>\r\n      <td>{{user.phone}}</td>\r\n      <td>{{user.age}}</td>\r\n      <td>{{user.role}}</td>\r\n      <td>\r\n\r\n        <div class=\"dropdown\" style=\"width: 100%;\">\r\n          <a routerLink=\"edit/{{user.id}}\" class=\"btn btn-sm btn-primary mr-1\">Edit</a>\r\n          <button (click)=\"deleteUser(user.id)\" class=\"btn btn-sm btn-danger btn-delete-user\">\r\n            <span *ngIf=\"user.isDeleting\" class=\"spinner-border spinner-border-sm\"></span>\r\n            <span *ngIf=\"!user.isDeleting\">Delete</span>\r\n          </button>\r\n\r\n          <button style=\"width: 40%; font-size: .875rem; padding: 0.25rem 0.5rem\" class=\"btn btn-secondary dropdown-toggle ml-1\" type=\"button\" id=\"dropdownMenuButton\"\r\n            data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n            Email\r\n          </button>\r\n          <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n            <button (click)=\"sendEmail(user.id, 'BOOK_DEBT')\" class=\"dropdown-item\">BOOK_DEBT</button>\r\n            <button (click)=\"sendEmail(user.id, 'BOOK_ORDERED')\" class=\"dropdown-item\">BOOK_ORDERED</button>\r\n            <button (click)=\"sendEmail(user.id, 'BOOK_IN_LIBRARY')\" class=\"dropdown-item\">BOOK_IN_LIBRARY</button>\r\n          </div>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n<script src=\"https://code.jquery.com/jquery-3.3.1.js\"></script>\r\n<script src=\"https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js\"></script>\r\n\r\n<script>\r\n  $(document).ready( function () {\r\n    $('#myTable').DataTable();\r\n  } );\r\n</script>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LayoutComponent } from './layout.component';\r\nimport { ListComponent } from './list.component';\r\nimport { AddEditComponent } from './add-edit.component';\r\nimport {ProfileComponent} from '@app/profile/profile.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: LayoutComponent,\r\n        children: [\r\n            { path: '', component: ListComponent },\r\n            { path: 'add', component: AddEditComponent },\r\n            { path: 'edit/:id', component: AddEditComponent },\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class UsersRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { UsersRoutingModule } from './users-routing.module';\r\nimport { LayoutComponent } from './layout.component';\r\nimport { ListComponent } from './list.component';\r\nimport { AddEditComponent } from './add-edit.component';\r\nimport {DataTablesModule} from 'angular-datatables';\r\nimport { NgForm } from '@angular/forms';\r\nimport {EditProfileComponent} from '@app/profile/edit-profile.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        UsersRoutingModule,\r\n        DataTablesModule\r\n    ],\r\n    declarations: [\r\n        LayoutComponent,\r\n        ListComponent,\r\n        AddEditComponent,\r\n    ]\r\n})\r\nexport class UsersModule { }\r\n"],"sourceRoot":"webpack:///"}