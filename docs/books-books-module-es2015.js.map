{"version":3,"sources":["./src/app/books/add-edit.component.ts","./src/app/books/add-edit.component.html","./src/app/books/books-routing.module.ts","./src/app/books/books.component.ts","./src/app/books/books.component.html","./src/app/books/books.module.ts","./src/app/books/layout.component.ts","./src/app/books/layout.component.html"],"names":[],"mappings":"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","file":"books-books-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AlertService } from '@app/_services';\r\nimport { BookService } from '@app/_services/book.service';\r\nimport { AccountService } from '@app/_services';\r\nimport { first } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-add-edit',\r\n  templateUrl: './add-edit.component.html',\r\n})\r\nexport class AddEditComponent implements OnInit {\r\n  form: FormGroup;\r\n  id: string;\r\n  isAddMode: boolean;\r\n  loading = false;\r\n  submitted = false;\r\n  userId: number;\r\n  authors: Array<string>\r\n  categories: Array<string>\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private bookService: BookService,\r\n    private accountService: AccountService,\r\n    private alertService: AlertService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.userId = this.accountService.userId;\r\n    this.id = this.route.snapshot.params['id'];\r\n    this.isAddMode = !this.id;\r\n\r\n    this.form = this.formBuilder.group({\r\n      title: ['', Validators.required],\r\n      authors: ['', Validators.required],\r\n      publisher: ['', Validators.required],\r\n      publishedDate: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n      industryIdentifiers: ['', Validators.required],\r\n      pageCount: ['', Validators.required],\r\n      categories: ['', Validators.required],\r\n      averageRating: ['', Validators.required],\r\n      ratingsCount: ['', Validators.required],\r\n      maturityRating: ['', Validators.required],\r\n      imageLinks: ['', Validators.required],\r\n      language: ['', Validators.required],\r\n      previewLink: ['', Validators.required]\r\n    });\r\n\r\n    if (!this.isAddMode) {\r\n      this.bookService.getById(this.id)\r\n        .pipe(first())\r\n        .subscribe(x => {\r\n          this.authors = x.authors;\r\n          this.categories = x.categories;\r\n          this.f.title.setValue(x.title);\r\n          this.f.authors.setValue(x.authors);\r\n          this.f.publisher.setValue(x.publisher);\r\n          this.f.publishedDate.setValue(x.publishedDate);\r\n          this.f.description.setValue(x.description);\r\n          this.f.industryIdentifiers.setValue(x.industryIdentifiers);\r\n          this.f.pageCount.setValue(x.pageCount);\r\n          this.f.categories.setValue(x.categories);\r\n          this.f.averageRating.setValue(x.averageRating);\r\n          this.f.ratingsCount.setValue(x.ratingsCount);\r\n          this.f.maturityRating.setValue(x.maturityRating);\r\n          this.f.imageLinks.setValue(x.imageLinks);\r\n          this.f.language.setValue(x.language);\r\n          this.f.previewLink.setValue(x.previewLink);\r\n          this.f.id.setValue(this.userId);\r\n        });\r\n    }\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.form.controls; }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // reset alerts on submit\r\n    this.alertService.clear();\r\n\r\n    // stop here if form is invalid\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    if (this.isAddMode) {\r\n      this.createBook();\r\n    } else {\r\n      this.updateBook();\r\n    }\r\n  }\r\n\r\n  private createBook() {\r\n    this.form.value.authors = this.form.value.authors.split(',');\r\n    this.form.value.categories = this.form.value.categories.split(',');\r\n    this.form.value.industryIdentifiers = [{ 'isbn': this.form.value.industryIdentifiers.split(',')[0] }];\r\n    this.form.value.imageLinks = { 'thumbnail': this.form.value.imageLinks.split(',')[0] };\r\n    this.bookService.register(this.form.value, this.userId, true)\r\n      .pipe(first())\r\n      .subscribe(\r\n        data => {\r\n          this.alertService.success('Book added successfully', { keepAfterRouteChange: true });\r\n          this.router.navigate(['.', { relativeTo: this.route }]);\r\n        },\r\n        error => {\r\n          this.alertService.error(error.error.errorMessage);\r\n          this.loading = false;\r\n        });\r\n  }\r\n\r\n  private updateBook() {\r\n    if (!(this.form.value.authors == this.authors)) {\r\n      this.form.value.authors = this.form.value.authors.split(',');\r\n    }\r\n    if (!(this.form.value.categories == this.categories)) {\r\n      this.form.value.categories = this.form.value.categories.split(',');\r\n    }\r\n\r\n    this.bookService.update(this.id, this.form.value)\r\n      .pipe(first())\r\n      .subscribe(\r\n        data => {\r\n          this.alertService.success('Update successful', { keepAfterRouteChange: true });\r\n          this.router.navigate(['..', { relativeTo: this.route }]);\r\n        },\r\n        error => {\r\n          this.alertService.error(error.error);\r\n          this.loading = false;\r\n        });\r\n  }\r\n\r\n}\r\n","<h1 *ngIf=\"isAddMode\">Add Book</h1>\r\n<h1 *ngIf=\"!isAddMode\">Edit Book</h1>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n\r\n\r\n  <div *ngIf=\"isAddMode\">\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group col\">\r\n        <label for=\"title\">Title</label>\r\n        <input type=\"text\" required formControlName=\"title\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.title.errors }\" />\r\n        <div *ngIf=\"submitted && f.title.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.title.errors.required\">Title is required</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group col\">\r\n        <label for=\"authors\">Authors</label>\r\n        <input type=\"text\" formControlName=\"authors\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.authors.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group col\">\r\n        <label for=\"publisher\">Publisher</label>\r\n        <input type=\"text\" formControlName=\"publisher\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.publisher.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.publisher.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.publisher.errors.required\">Publisher is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n      <div class=\"form-group col\">\r\n        <label for=\"publishedDate\">Published Date</label>\r\n        <input type=\"text\" formControlName=\"publishedDate\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.publishedDate.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.publishedDate.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.publishedDate.errors.required\">PublishedDate is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group col\">\r\n        <label for=\"description\">Description</label>\r\n        <input type=\"text\" formControlName=\"description\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.description.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.age.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.age.errors.required\">Description is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n      <div class=\"form-group col\">\r\n        <label for=\"industryIdentifiers\">Industry Identifiers</label>\r\n        <input type=\"text\" formControlName=\"industryIdentifiers\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.industryIdentifiers.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.phone.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.lastName.errors.required\">Phone is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group col\">\r\n        <label for=\"pageCount\">Page count</label>\r\n        <input type=\"text\" formControlName=\"pageCount\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.pageCount.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.pageCount.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.age.errors.required\">Age is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n      <div class=\"form-group col\">\r\n        <label for=\"categories\">Categories</label>\r\n        <input type=\"text\" formControlName=\"categories\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.categories.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.phone.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.lastName.errors.required\">Phone is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group col\">\r\n        <label for=\"averageRating\">Average rating</label>\r\n        <input type=\"text\" formControlName=\"averageRating\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.averageRating.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.averageRating.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.averageRating.errors.required\">averageRating is required</div>-->\r\n        <!--     </div>-->\r\n      </div>\r\n      <div class=\"form-group col\">\r\n        <label for=\"ratingsCount\">Ratings count</label>\r\n        <input type=\"text\" formControlName=\"ratingsCount\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.ratingsCount.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.phone.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.lastName.errors.required\">Phone is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group col\">\r\n        <label for=\"maturityRating\">Maturity Rating</label>\r\n        <input type=\"text\" formControlName=\"maturityRating\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.maturityRating.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.age.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.age.errors.required\">Age is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n      <div class=\"form-group col\">\r\n        <label for=\"imageLinks\">Image Links</label>\r\n        <input type=\"text\" formControlName=\"imageLinks\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.imageLinks.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.phone.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.lastName.errors.required\">Phone is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group col\">\r\n        <label for=\"language\">Language</label>\r\n        <input type=\"text\" formControlName=\"language\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.language.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.age.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.age.errors.required\">Age is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n      <div class=\"form-group col\">\r\n        <label for=\"previewLink\">Preview Link</label>\r\n        <input type=\"text\" formControlName=\"previewLink\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.previewLink.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.phone.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.lastName.errors.required\">Phone is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n        <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n        Save\r\n      </button>\r\n      <a routerLink=\"/books\" class=\"btn btn-link\">Cancel</a>\r\n    </div>\r\n  </div>\r\n  <div *ngIf=\"!isAddMode\">\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group col\">\r\n        <label for=\"title\">Title</label>\r\n        <input type=\"text\" required formControlName=\"title\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.title.errors }\" />\r\n        <div *ngIf=\"submitted && f.title.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.title.errors.required\">Title is required</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group col\">\r\n        <label for=\"authors\">Authors</label>\r\n        <input type=\"text\" formControlName=\"authors\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.authors.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group col\">\r\n        <label for=\"publisher\">Publisher</label>\r\n        <input type=\"text\" formControlName=\"publisher\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.publisher.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.publisher.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.publisher.errors.required\">Publisher is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n      <div class=\"form-group col\">\r\n        <label for=\"publishedDate\">Published Date</label>\r\n        <input type=\"text\" formControlName=\"publishedDate\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.publishedDate.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.publishedDate.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.publishedDate.errors.required\">PublishedDate is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group col\">\r\n        <label for=\"description\">Description</label>\r\n        <input type=\"text\" formControlName=\"description\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.description.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.age.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.age.errors.required\">Description is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n      <div class=\"form-group col\">\r\n        <label for=\"maturityRating\">Maturity Rating</label>\r\n        <input type=\"text\" formControlName=\"maturityRating\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.maturityRating.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.age.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.age.errors.required\">Age is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group col\">\r\n        <label for=\"pageCount\">Page count</label>\r\n        <input type=\"text\" formControlName=\"pageCount\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.pageCount.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.pageCount.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.age.errors.required\">Age is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n      <div class=\"form-group col\">\r\n        <label for=\"categories\">Categories</label>\r\n        <input type=\"text\" formControlName=\"categories\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.categories.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.phone.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.lastName.errors.required\">Phone is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group col\">\r\n        <label for=\"averageRating\">Average rating</label>\r\n        <input type=\"text\" formControlName=\"averageRating\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.averageRating.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.averageRating.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.averageRating.errors.required\">averageRating is required</div>-->\r\n        <!--     </div>-->\r\n      </div>\r\n      <div class=\"form-group col\">\r\n        <label for=\"ratingsCount\">Ratings count</label>\r\n        <input type=\"text\" formControlName=\"ratingsCount\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.ratingsCount.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.phone.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.lastName.errors.required\">Phone is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group col\">\r\n        <label for=\"language\">Language</label>\r\n        <input type=\"text\" formControlName=\"language\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.language.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.age.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.age.errors.required\">Age is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n      <div class=\"form-group col\">\r\n        <label for=\"previewLink\">Preview Link</label>\r\n        <input type=\"text\" formControlName=\"previewLink\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.previewLink.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.phone.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.lastName.errors.required\">Phone is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n        <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n        Save\r\n      </button>\r\n      <a routerLink=\"/books\" class=\"btn btn-link\">Cancel</a>\r\n    </div>\r\n  </div>\r\n\r\n\r\n</form>","import { NgModule } from '@angular/core';\r\n// import { CommonModule } from '@angular/common';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {LayoutComponent} from './layout.component';\r\nimport {BooksComponent} from './books.component';\r\nimport {AddEditComponent} from './add-edit.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n      path: '', component: LayoutComponent,\r\n    children: [\r\n      { path: '', component: BooksComponent },\r\n      { path: 'add', component: AddEditComponent },\r\n      { path: 'edit/:id', component: AddEditComponent }\r\n      ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  // CommonModule,\r\n  exports: [RouterModule]\r\n})\r\nexport class BooksRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { first } from 'rxjs/operators';\r\nimport { BookService } from '@app/_services/book.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Book } from '@app/_models/book';\r\n\r\n@Component({\r\n  templateUrl: './books.component.html',\r\n  styleUrls: ['./books.component.less']\r\n})\r\n\r\nexport class BooksComponent implements OnInit {\r\n  dtOptions: DataTables.Settings = {};\r\n  books: Book[] = [];\r\n  emailDropdown = false;\r\n\r\n\r\n  // We use this trigger because fetching the list of persons can be quite long,\r\n  // thus we ensure the data is fetched before rendering\r\n  dtTrigger: Subject<any> = new Subject<any>();\r\n\r\n  constructor(private bookService: BookService, private router: Router, private activatedRoute: ActivatedRoute) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dtOptions = {\r\n      pagingType: 'full_numbers',\r\n      pageLength: 10\r\n    };\r\n    this.bookService.getAllFiltered()\r\n      .pipe(first())\r\n      .subscribe(books => {\r\n        this.books = books;\r\n        this.dtTrigger.next();\r\n      });\r\n  }\r\n\r\n  deleteBook(id: string) {\r\n    // const book = this.books.find(x => x.id === id);\r\n    // book.isDeleting = true;\r\n    this.bookService.delete(id)\r\n      .pipe(first())\r\n      .subscribe(() => {\r\n        this.books = this.books.filter(x => x.id !== id);\r\n      });\r\n  }\r\n}\r\n","<h1>Books</h1>\r\n<a routerLink=\"add\" class=\"btn btn-sm btn-success mb-2\">Add Book</a>\r\n<div style=\"overflow: auto; width: 1200px; margin: 0;\">\r\n  <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped\">\r\n    <thead>\r\n      <tr>\r\n        <th>ID</th>\r\n        <th>Title</th>\r\n        <th>Authors</th>\r\n        <th>Publisher</th>\r\n        <th>Description</th>\r\n        <th>Page count</th>\r\n        <th>Categories</th>\r\n        <th>Average rating</th>\r\n        <th>Language</th>\r\n        <th></th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let book of books\">\r\n        <td>{{book.id}}</td>\r\n        <td>\r\n          <a routerLink=\"/books/{{book.id}}\">{{book.title}}</a>\r\n        </td>\r\n        <td>{{book.authors}}</td>\r\n        <td>{{book.publisher}}</td>\r\n        <td class=\"desctiption-text-hidden\">{{book.description}}</td>\r\n        <td>{{book.pageCount}}</td>\r\n        <td>{{book.categories}}</td>\r\n        <td>{{book.averageRating}}</td>\r\n        <td>{{book.language}}</td>\r\n        <td style=\"white-space: nowrap\">\r\n          <a routerLink=\"edit/{{book.id}}\" class=\"btn btn-sm btn-primary mr-1\">Edit</a>\r\n          <button (click)=\"deleteBook(book.id)\" class=\"btn btn-sm btn-danger btn-delete-user\">\r\n            <span *ngIf=\"book.isDeleting\" class=\"spinner-border spinner-border-sm\"></span>\r\n            <span *ngIf=\"!book.isDeleting\">Delete</span>\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LayoutComponent } from './layout.component';\r\nimport { AddEditComponent } from './add-edit.component';\r\nimport {DataTablesModule} from \"angular-datatables\";\r\nimport { NgForm } from '@angular/forms';\r\nimport {BooksRoutingModule} from '@app/books/books-routing.module';\r\nimport {BooksComponent} from '@app/books/books.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    BooksRoutingModule,\r\n    DataTablesModule\r\n  ],\r\n  declarations: [\r\n    LayoutComponent,\r\n    BooksComponent,\r\n    AddEditComponent\r\n  ]\r\n})\r\nexport class BooksModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: './layout.component.html',\r\n})\r\nexport class LayoutComponent {\r\n\r\n}\r\n","<div class=\"p-4\">\r\n  <div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}