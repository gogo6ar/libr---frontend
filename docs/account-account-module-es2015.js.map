{"version":3,"sources":["./src/app/account/account-routing.module.ts","./src/app/account/account.module.ts","./src/app/account/layout.component.ts","./src/app/account/layout.component.html","./src/app/account/login.component.ts","./src/app/account/login.component.html","./src/app/account/register.component.ts","./src/app/account/register.component.html"],"names":[],"mappings":"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","file":"account-account-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LayoutComponent } from './layout.component';\r\nimport { LoginComponent } from './login.component';\r\nimport { RegisterComponent } from './register.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: LayoutComponent,\r\n        children: [\r\n            { path: 'login', component: LoginComponent },\r\n            { path: 'register', component: RegisterComponent }\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AccountRoutingModule { }","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AccountRoutingModule } from './account-routing.module';\r\nimport { LayoutComponent } from './layout.component';\r\nimport { LoginComponent } from './login.component';\r\nimport { RegisterComponent } from './register.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        AccountRoutingModule\r\n    ],\r\n    declarations: [\r\n        LayoutComponent,\r\n        LoginComponent,\r\n        RegisterComponent\r\n    ]\r\n})\r\nexport class AccountModule { }","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AccountService } from '@app/_services';\r\n\r\n@Component({ templateUrl: 'layout.component.html' })\r\nexport class LayoutComponent {\r\n    constructor(\r\n        private router: Router,\r\n        private accountService: AccountService\r\n    ) {\r\n        // redirect to home if already logged in\r\n        if (this.accountService.userValue) {\r\n            this.router.navigate(['/']);\r\n        }\r\n    }\r\n}","<div class=\"col-md-6 offset-md-3 mt-5\">\r\n    <router-outlet></router-outlet>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AccountService, AlertService } from '@app/_services';\r\n\r\n@Component({ templateUrl: 'login.component.html' })\r\nexport class LoginComponent implements OnInit {\r\n    form: FormGroup;\r\n    loading = false;\r\n    submitted = false;\r\n    returnUrl: string;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.form = this.formBuilder.group({\r\n            email: ['', Validators.email],\r\n            password: ['', Validators.required]\r\n        });\r\n\r\n        // get return url from route parameters or default to '/'\r\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.form.controls; }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n\r\n        // reset alerts on submit\r\n        this.alertService.clear();\r\n\r\n        // stop here if form is invalid\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        this.accountService.login(this.f.email.value, this.f.password.value)\r\n            .pipe(first())\r\n            .subscribe(\r\n                data => {\r\n                    this.router.navigate([this.returnUrl]);\r\n                },\r\n                error => {\r\n                    this.alertService.error(error.error.errorMessage);\r\n                    this.loading = false;\r\n                });\r\n    }\r\n}\r\n","<div class=\"card\">\r\n    <h4 class=\"card-header\">Login</h4>\r\n    <div class=\"card-body\">\r\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"form-group\">\r\n                <label for=\"email\">Email</label>\r\n                <input type=\"text\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\r\n                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"password\">Password</label>\r\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                    Login\r\n                </button>\r\n                <a routerLink=\"../register\" class=\"btn btn-link\">Register</a>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AccountService, AlertService } from '@app/_services';\r\n\r\n@Component({ templateUrl: 'register.component.html' })\r\nexport class RegisterComponent implements OnInit {\r\n    form: FormGroup;\r\n    loading = false;\r\n    submitted = false;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.form = this.formBuilder.group({\r\n            firstName: ['', Validators.required],\r\n            lastName: ['', Validators.required],\r\n            email: ['', Validators.email],\r\n            age: ['', Validators.required],\r\n            phone: ['', Validators.required],\r\n            password: ['', [Validators.required, Validators.minLength(6)]],\r\n            confirmPass: ['', Validators.required]\r\n        }, {validator: this.checkIfMatchingPasswords('password', 'confirmPass')});\r\n    }\r\n\r\n  checkIfMatchingPasswords(passwordKey: string, passwordConfirmationKey: string) {\r\n    return (group: FormGroup) => {\r\n      const passwordInput = group.controls[passwordKey];\r\n      const passwordConfirmationInput = group.controls[passwordConfirmationKey];\r\n      if (passwordInput.value !== passwordConfirmationInput.value) {\r\n        return passwordConfirmationInput.setErrors({notEquivalent: true});\r\n      }\r\n      else {\r\n        return passwordConfirmationInput.setErrors(null);\r\n      }\r\n    };\r\n  }\r\n\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.form.controls; }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n\r\n        // reset alerts on submit\r\n        this.alertService.clear();\r\n\r\n        // stop here if form is invalid\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        this.accountService.register(this.form.value)\r\n            .pipe(first())\r\n            .subscribe(\r\n                data => {\r\n                    this.alertService.success('Registration successful', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['../login'], { relativeTo: this.route });\r\n                },\r\n                error => {\r\n                    this.alertService.error(error.error.errorMessage);\r\n                    this.loading = false;\r\n                });\r\n    }\r\n}\r\n","<div class=\"card\">\r\n    <h4 class=\"card-header\">Register</h4>\r\n    <div class=\"card-body\">\r\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"form-group\">\r\n                <label for=\"firstName\">First Name</label>\r\n                <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\r\n                <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"lastName\">Last Name</label>\r\n                <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\r\n                <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\r\n                </div>\r\n            </div>\r\n\r\n        <!--          My code      -->\r\n\r\n\r\n<!--          EMail-->\r\n            <div class=\"form-group\">\r\n                <label for=\"email\">Email</label>\r\n                <input type=\"text\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\r\n                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n                </div>\r\n            </div>\r\n\r\n<!--          Age-->\r\n          <div class=\"form-group\">\r\n            <label for=\"age\">Age</label>\r\n            <input type=\"number\" formControlName=\"age\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.age.errors }\" />\r\n            <div *ngIf=\"submitted && f.age.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.age.errors.required\">Age is required</div>\r\n            </div>\r\n          </div>\r\n\r\n<!--          Telephone number-->\r\n          <div class=\"form-group\">\r\n            <label for=\"phone\">Telephone number</label>\r\n            <input type=\"text\" formControlName=\"phone\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.phone.errors }\" />\r\n            <div *ngIf=\"submitted && f.phone.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.phone.errors.required\">Telephone is required</div>\r\n            </div>\r\n          </div>\r\n\r\n<!--          My code      -->\r\n          <div class=\"form-group\">\r\n            <label for=\"password\">Password</label>\r\n            <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n            <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n              <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\r\n            </div>\r\n          </div>\r\n\r\n<!--       My code ---   Confirm password-->\r\n          <div class=\"form-group\">\r\n            <label for=\"confirmPass\">Confirm your password</label>\r\n              <input type=\"password\" formControlName=\"confirmPass\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.confirmPass.errors }\" />\r\n              <div *ngIf=\"submitted && f.confirmPass.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.confirmPass.hasError('checkIfMatchingPasswords')\">Passwords don't match</div>\r\n              </div>\r\n          </div>\r\n<!--          My code-->\r\n            <div class=\"form-group\">\r\n                <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                    Register\r\n                </button>\r\n                <a routerLink=\"../login\" class=\"btn btn-link\">Cancel</a>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}