{"version":3,"sources":["webpack:///src/app/books/add-edit.component.ts","webpack:///src/app/books/add-edit.component.html","webpack:///src/app/books/books-routing.module.ts","webpack:///src/app/books/books.component.ts","webpack:///src/app/books/books.component.html","webpack:///src/app/books/books.module.ts","webpack:///src/app/books/layout.component.ts","webpack:///src/app/books/layout.component.html"],"names":["AddEditComponent","formBuilder","route","router","bookService","accountService","alertService","loading","submitted","userId","id","snapshot","params","isAddMode","form","group","title","required","authors","publisher","publishedDate","description","industryIdentifiers","pageCount","categories","averageRating","ratingsCount","maturityRating","imageLinks","language","previewLink","getById","pipe","subscribe","x","f","setValue","clear","invalid","createBook","updateBook","value","split","register","data","success","keepAfterRouteChange","navigate","relativeTo","error","errorMessage","update","controls","onSubmit","selector","templateUrl","routes","path","component","children","BooksRoutingModule","forChild","imports","exports","BooksComponent","activatedRoute","dtOptions","books","emailDropdown","dtTrigger","pagingType","pageLength","getAllFiltered","next","filter","styleUrls","BooksModule","declarations","LayoutComponent"],"mappings":"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","file":"books-books-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AlertService } from '@app/_services';\r\nimport { BookService } from '@app/_services/book.service';\r\nimport { AccountService } from '@app/_services';\r\nimport { first } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-add-edit',\r\n  templateUrl: './add-edit.component.html',\r\n})\r\nexport class AddEditComponent implements OnInit {\r\n  form: FormGroup;\r\n  id: string;\r\n  isAddMode: boolean;\r\n  loading = false;\r\n  submitted = false;\r\n  userId: number;\r\n  authors: Array<string>\r\n  categories: Array<string>\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private bookService: BookService,\r\n    private accountService: AccountService,\r\n    private alertService: AlertService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.userId = this.accountService.userId;\r\n    this.id = this.route.snapshot.params['id'];\r\n    this.isAddMode = !this.id;\r\n\r\n    this.form = this.formBuilder.group({\r\n      title: ['', Validators.required],\r\n      authors: ['', Validators.required],\r\n      publisher: ['', Validators.required],\r\n      publishedDate: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n      industryIdentifiers: ['', Validators.required],\r\n      pageCount: ['', Validators.required],\r\n      categories: ['', Validators.required],\r\n      averageRating: ['', Validators.required],\r\n      ratingsCount: ['', Validators.required],\r\n      maturityRating: ['', Validators.required],\r\n      imageLinks: ['', Validators.required],\r\n      language: ['', Validators.required],\r\n      previewLink: ['', Validators.required]\r\n    });\r\n\r\n    if (!this.isAddMode) {\r\n      this.bookService.getById(this.id)\r\n        .pipe(first())\r\n        .subscribe(x => {\r\n          this.authors = x.authors;\r\n          this.categories = x.categories;\r\n          this.f.title.setValue(x.title);\r\n          this.f.authors.setValue(x.authors);\r\n          this.f.publisher.setValue(x.publisher);\r\n          this.f.publishedDate.setValue(x.publishedDate);\r\n          this.f.description.setValue(x.description);\r\n          this.f.industryIdentifiers.setValue(x.industryIdentifiers);\r\n          this.f.pageCount.setValue(x.pageCount);\r\n          this.f.categories.setValue(x.categories);\r\n          this.f.averageRating.setValue(x.averageRating);\r\n          this.f.ratingsCount.setValue(x.ratingsCount);\r\n          this.f.maturityRating.setValue(x.maturityRating);\r\n          this.f.imageLinks.setValue(x.imageLinks);\r\n          this.f.language.setValue(x.language);\r\n          this.f.previewLink.setValue(x.previewLink);\r\n          this.f.id.setValue(this.userId);\r\n        });\r\n    }\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.form.controls; }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // reset alerts on submit\r\n    this.alertService.clear();\r\n\r\n    // stop here if form is invalid\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    if (this.isAddMode) {\r\n      this.createBook();\r\n    } else {\r\n      this.updateBook();\r\n    }\r\n  }\r\n\r\n  private createBook() {\r\n    this.form.value.authors = this.form.value.authors.split(',');\r\n    this.form.value.categories = this.form.value.categories.split(',');\r\n    this.form.value.industryIdentifiers = [{ 'isbn': this.form.value.industryIdentifiers.split(',')[0] }];\r\n    this.form.value.imageLinks = { 'thumbnail': this.form.value.imageLinks.split(',')[0] };\r\n    this.bookService.register(this.form.value, this.userId, true)\r\n      .pipe(first())\r\n      .subscribe(\r\n        data => {\r\n          this.alertService.success('Book added successfully', { keepAfterRouteChange: true });\r\n          this.router.navigate(['.', { relativeTo: this.route }]);\r\n        },\r\n        error => {\r\n          this.alertService.error(error.error.errorMessage);\r\n          this.loading = false;\r\n        });\r\n  }\r\n\r\n  private updateBook() {\r\n    if (!(this.form.value.authors == this.authors)) {\r\n      this.form.value.authors = this.form.value.authors.split(',');\r\n    }\r\n    if (!(this.form.value.categories == this.categories)) {\r\n      this.form.value.categories = this.form.value.categories.split(',');\r\n    }\r\n\r\n    this.bookService.update(this.id, this.form.value)\r\n      .pipe(first())\r\n      .subscribe(\r\n        data => {\r\n          this.alertService.success('Update successful', { keepAfterRouteChange: true });\r\n          this.router.navigate(['..', { relativeTo: this.route }]);\r\n        },\r\n        error => {\r\n          this.alertService.error(error.error);\r\n          this.loading = false;\r\n        });\r\n  }\r\n\r\n}\r\n","<h1 *ngIf=\"isAddMode\">Add Book</h1>\r\n<h1 *ngIf=\"!isAddMode\">Edit Book</h1>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n\r\n\r\n  <div *ngIf=\"isAddMode\">\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group col\">\r\n        <label for=\"title\">Title</label>\r\n        <input type=\"text\" required formControlName=\"title\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.title.errors }\" />\r\n        <div *ngIf=\"submitted && f.title.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.title.errors.required\">Title is required</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group col\">\r\n        <label for=\"authors\">Authors</label>\r\n        <input type=\"text\" formControlName=\"authors\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.authors.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group col\">\r\n        <label for=\"publisher\">Publisher</label>\r\n        <input type=\"text\" formControlName=\"publisher\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.publisher.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.publisher.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.publisher.errors.required\">Publisher is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n      <div class=\"form-group col\">\r\n        <label for=\"publishedDate\">Published Date</label>\r\n        <input type=\"text\" formControlName=\"publishedDate\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.publishedDate.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.publishedDate.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.publishedDate.errors.required\">PublishedDate is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group col\">\r\n        <label for=\"description\">Description</label>\r\n        <input type=\"text\" formControlName=\"description\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.description.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.age.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.age.errors.required\">Description is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n      <div class=\"form-group col\">\r\n        <label for=\"industryIdentifiers\">Industry Identifiers</label>\r\n        <input type=\"text\" formControlName=\"industryIdentifiers\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.industryIdentifiers.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.phone.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.lastName.errors.required\">Phone is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group col\">\r\n        <label for=\"pageCount\">Page count</label>\r\n        <input type=\"text\" formControlName=\"pageCount\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.pageCount.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.pageCount.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.age.errors.required\">Age is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n      <div class=\"form-group col\">\r\n        <label for=\"categories\">Categories</label>\r\n        <input type=\"text\" formControlName=\"categories\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.categories.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.phone.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.lastName.errors.required\">Phone is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group col\">\r\n        <label for=\"averageRating\">Average rating</label>\r\n        <input type=\"text\" formControlName=\"averageRating\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.averageRating.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.averageRating.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.averageRating.errors.required\">averageRating is required</div>-->\r\n        <!--     </div>-->\r\n      </div>\r\n      <div class=\"form-group col\">\r\n        <label for=\"ratingsCount\">Ratings count</label>\r\n        <input type=\"text\" formControlName=\"ratingsCount\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.ratingsCount.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.phone.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.lastName.errors.required\">Phone is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group col\">\r\n        <label for=\"maturityRating\">Maturity Rating</label>\r\n        <input type=\"text\" formControlName=\"maturityRating\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.maturityRating.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.age.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.age.errors.required\">Age is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n      <div class=\"form-group col\">\r\n        <label for=\"imageLinks\">Image Links</label>\r\n        <input type=\"text\" formControlName=\"imageLinks\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.imageLinks.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.phone.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.lastName.errors.required\">Phone is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group col\">\r\n        <label for=\"language\">Language</label>\r\n        <input type=\"text\" formControlName=\"language\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.language.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.age.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.age.errors.required\">Age is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n      <div class=\"form-group col\">\r\n        <label for=\"previewLink\">Preview Link</label>\r\n        <input type=\"text\" formControlName=\"previewLink\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.previewLink.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.phone.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.lastName.errors.required\">Phone is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n        <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n        Save\r\n      </button>\r\n      <a routerLink=\"/books\" class=\"btn btn-link\">Cancel</a>\r\n    </div>\r\n  </div>\r\n  <div *ngIf=\"!isAddMode\">\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group col\">\r\n        <label for=\"title\">Title</label>\r\n        <input type=\"text\" required formControlName=\"title\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.title.errors }\" />\r\n        <div *ngIf=\"submitted && f.title.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.title.errors.required\">Title is required</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group col\">\r\n        <label for=\"authors\">Authors</label>\r\n        <input type=\"text\" formControlName=\"authors\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.authors.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group col\">\r\n        <label for=\"publisher\">Publisher</label>\r\n        <input type=\"text\" formControlName=\"publisher\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.publisher.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.publisher.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.publisher.errors.required\">Publisher is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n      <div class=\"form-group col\">\r\n        <label for=\"publishedDate\">Published Date</label>\r\n        <input type=\"text\" formControlName=\"publishedDate\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.publishedDate.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.publishedDate.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.publishedDate.errors.required\">PublishedDate is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group col\">\r\n        <label for=\"description\">Description</label>\r\n        <input type=\"text\" formControlName=\"description\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.description.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.age.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.age.errors.required\">Description is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n      <div class=\"form-group col\">\r\n        <label for=\"maturityRating\">Maturity Rating</label>\r\n        <input type=\"text\" formControlName=\"maturityRating\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.maturityRating.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.age.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.age.errors.required\">Age is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group col\">\r\n        <label for=\"pageCount\">Page count</label>\r\n        <input type=\"text\" formControlName=\"pageCount\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.pageCount.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.pageCount.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.age.errors.required\">Age is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n      <div class=\"form-group col\">\r\n        <label for=\"categories\">Categories</label>\r\n        <input type=\"text\" formControlName=\"categories\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.categories.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.phone.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.lastName.errors.required\">Phone is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group col\">\r\n        <label for=\"averageRating\">Average rating</label>\r\n        <input type=\"text\" formControlName=\"averageRating\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.averageRating.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.averageRating.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.averageRating.errors.required\">averageRating is required</div>-->\r\n        <!--     </div>-->\r\n      </div>\r\n      <div class=\"form-group col\">\r\n        <label for=\"ratingsCount\">Ratings count</label>\r\n        <input type=\"text\" formControlName=\"ratingsCount\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.ratingsCount.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.phone.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.lastName.errors.required\">Phone is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group col\">\r\n        <label for=\"language\">Language</label>\r\n        <input type=\"text\" formControlName=\"language\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.language.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.age.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.age.errors.required\">Age is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n      <div class=\"form-group col\">\r\n        <label for=\"previewLink\">Preview Link</label>\r\n        <input type=\"text\" formControlName=\"previewLink\" class=\"form-control\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.previewLink.errors }\" />\r\n        <!--      <div *ngIf=\"submitted && f.phone.errors\" class=\"invalid-feedback\">-->\r\n        <!--        <div *ngIf=\"f.lastName.errors.required\">Phone is required</div>-->\r\n        <!--      </div>-->\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n        <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n        Save\r\n      </button>\r\n      <a routerLink=\"/books\" class=\"btn btn-link\">Cancel</a>\r\n    </div>\r\n  </div>\r\n\r\n\r\n</form>","import { NgModule } from '@angular/core';\r\n// import { CommonModule } from '@angular/common';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {LayoutComponent} from './layout.component';\r\nimport {BooksComponent} from './books.component';\r\nimport {AddEditComponent} from './add-edit.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n      path: '', component: LayoutComponent,\r\n    children: [\r\n      { path: '', component: BooksComponent },\r\n      { path: 'add', component: AddEditComponent },\r\n      { path: 'edit/:id', component: AddEditComponent }\r\n      ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  // CommonModule,\r\n  exports: [RouterModule]\r\n})\r\nexport class BooksRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { first } from 'rxjs/operators';\r\nimport { BookService } from '@app/_services/book.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Book } from '@app/_models/book';\r\n\r\n@Component({\r\n  templateUrl: './books.component.html',\r\n  styleUrls: ['./books.component.less']\r\n})\r\n\r\nexport class BooksComponent implements OnInit {\r\n  dtOptions: DataTables.Settings = {};\r\n  books: Book[] = [];\r\n  emailDropdown = false;\r\n\r\n\r\n  // We use this trigger because fetching the list of persons can be quite long,\r\n  // thus we ensure the data is fetched before rendering\r\n  dtTrigger: Subject<any> = new Subject<any>();\r\n\r\n  constructor(private bookService: BookService, private router: Router, private activatedRoute: ActivatedRoute) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dtOptions = {\r\n      pagingType: 'full_numbers',\r\n      pageLength: 10\r\n    };\r\n    this.bookService.getAllFiltered()\r\n      .pipe(first())\r\n      .subscribe(books => {\r\n        this.books = books;\r\n        this.dtTrigger.next();\r\n      });\r\n  }\r\n\r\n  deleteBook(id: string) {\r\n    // const book = this.books.find(x => x.id === id);\r\n    // book.isDeleting = true;\r\n    this.bookService.delete(id)\r\n      .pipe(first())\r\n      .subscribe(() => {\r\n        this.books = this.books.filter(x => x.id !== id);\r\n      });\r\n  }\r\n}\r\n","<h1>Books</h1>\r\n<a routerLink=\"add\" class=\"btn btn-sm btn-success mb-2\">Add Book</a>\r\n<div style=\"overflow: auto; width: 1200px; margin: 0;\">\r\n  <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped\">\r\n    <thead>\r\n      <tr>\r\n        <th>ID</th>\r\n        <th>Title</th>\r\n        <th>Authors</th>\r\n        <th>Publisher</th>\r\n        <th>Description</th>\r\n        <th>Page count</th>\r\n        <th>Categories</th>\r\n        <th>Average rating</th>\r\n        <th>Language</th>\r\n        <th></th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let book of books\">\r\n        <td>{{book.id}}</td>\r\n        <td>\r\n          <a routerLink=\"/books/{{book.id}}\">{{book.title}}</a>\r\n        </td>\r\n        <td>{{book.authors}}</td>\r\n        <td>{{book.publisher}}</td>\r\n        <td class=\"desctiption-text-hidden\">{{book.description}}</td>\r\n        <td>{{book.pageCount}}</td>\r\n        <td>{{book.categories}}</td>\r\n        <td>{{book.averageRating}}</td>\r\n        <td>{{book.language}}</td>\r\n        <td style=\"white-space: nowrap\">\r\n          <a routerLink=\"edit/{{book.id}}\" class=\"btn btn-sm btn-primary mr-1\">Edit</a>\r\n          <button (click)=\"deleteBook(book.id)\" class=\"btn btn-sm btn-danger btn-delete-user\">\r\n            <span *ngIf=\"book.isDeleting\" class=\"spinner-border spinner-border-sm\"></span>\r\n            <span *ngIf=\"!book.isDeleting\">Delete</span>\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LayoutComponent } from './layout.component';\r\nimport { AddEditComponent } from './add-edit.component';\r\nimport {DataTablesModule} from \"angular-datatables\";\r\nimport { NgForm } from '@angular/forms';\r\nimport {BooksRoutingModule} from '@app/books/books-routing.module';\r\nimport {BooksComponent} from '@app/books/books.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    BooksRoutingModule,\r\n    DataTablesModule\r\n  ],\r\n  declarations: [\r\n    LayoutComponent,\r\n    BooksComponent,\r\n    AddEditComponent\r\n  ]\r\n})\r\nexport class BooksModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: './layout.component.html',\r\n})\r\nexport class LayoutComponent {\r\n\r\n}\r\n","<div class=\"p-4\">\r\n  <div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n"]}